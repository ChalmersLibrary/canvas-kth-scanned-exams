# Adapted for Chalmers University of Technology, this is the minimal needed env:

# Node env, development will force debug logging
NODE_ENV=development

# Regular expression for obtaining Ladok UUID from Canvas Course Section SIS_ID:
CANVAS_SECTION_LADOKID_REGEX=^\d+_([0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12})_N2_SE$

# If we find multiple Ladok UUID from Canvas section, just force a return of the first UUID:
CANVAS_SECTION_LADOKID_MULTIPLE_FORCE_FIRST=true

# Mainly for testing, if we want to skip the logic for creating anonymous assignments:
#CANVAS_ASSIGNMENT_FORCE_NON_ANONYMOUS=true

# Chalmers sis_login_id is CID/uid, KTH has pnr and uses sis_integration_id instead
CANVAS_USER_ID_KEY=login_id
CANVAS_USER_ID_KEY_CONTAINS_DOMAIN=true
#CANVAS_USER_ID_KEY=sis_user_id
#CANVAS_USER_ID_KEY=sis_login_id

# Canvas API URL
CANVAS_API_URL=https://hostname/api/v1

# This app uses more than one token: one "ADMIN" token (set as environmental
# variable) and one for each user that launches the app (via OAuth2).
# - The "ADMIN" token is used for doing requests to the Canvas API.
# - Other tokens are only used for identification purposes
CANVAS_API_ADMIN_TOKEN=

# Developer key and secret
# Obtain them from your Canvas installation, Developer Keys
#
# This allows our app to identify the users of this app
CANVAS_DEVELOPER_KEY_ID=
CANVAS_DEVELOPER_KEY_SECRET=

# Canvas templates for courses and assignments
CANVAS_TEMPLATE_COURSE_HOMEPAGE_SV=
CANVAS_TEMPLATE_COURSE_HOMEPAGE_EN=
CANVAS_TEMPLATE_ASSIGNMENT_SV=courses/25030/assignments/68856
CANVAS_TEMPLATE_ASSIGNMENT_EN=courses/25030/assignments/68856

# URL and token for Aldoc API (KTH has a Tenta API gw, hence the name)
TENTA_API_URL=
TENTA_API_SUBSCRIPTION_KEY=

# ==========================================================
# FROM THIS POINT, ALL ENVIRONMENTAL VARIABLES HAVE THE
# VALUES FOR RUNNING THE APP LOCALLY.
# ==========================================================
SERVER_HOST_URL=https://localhost:4443

# Secret to sign the session cookies.
#   Note: in production, make sure to generate this value in a secure way
SESSION_SECRET=3589aa877a95651298e35744beb82691

# LADOK API (Chalmers: we read what we need from Canvas API, so not configured)
#
LADOK_API_BASEURL=
LADOK_API_PFX_BASE64=
LADOK_API_PFX_PASSPHRASE=

# Import Queue and Course Students Cache, using MongoDB
# Note: either open up between mongo container and scanned-exams with
# --add-host host.docker.internal:host-gateway or use "links" in docker-compose.yml
# to depend scanned-exams on mongo (then just use mongo:27017)
MONGODB_CONNECTION_STRING=mongodb://host.docker.internal:27017/scanned-exams

# Development Flags
#
# Uncomment this line to record calls during tests. When you are done,
# comment out this row and commit the generated fixtures
# NOCK_RECORD=TRUE

# Uncomment this line to generate random errors during import
# DEV_FORCE_RANDOM_ERRORS=TRUE